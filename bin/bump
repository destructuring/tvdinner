#!/bin/bash -e

case "$1" in
  patch|minor|major)
    bump=$1; shift
    set $(cat VERSION | sed 's#\.# #g')
    case "$bump" in
      patch)
        echo "$1.$2.$(($3 + 1))"
        ;;
      minor)
        echo "$1.$(($2 + 1)).$3"
        ;;
      major)
        echo "$(($1 + 1)).$2.$3"
        ;;
    esac > VERSION
    ;;
  *)
    ver_new=$1; shift
    set $(echo "$ver_new" | sed 's#\.# #g') 0
    M=$1; shift
    m=$1; shift
    p=$1; shift

    tmp_version=$(mktemp -t XXXXXXXXX)
    (echo "$(($M+0)).$(($m+0)).$(($p+0))" > $tmp_version) 2>&-
    ver_new_same=$(cat $tmp_version)
    rm -f $tmp_version

    if [[ $ver_new = $ver_new_same ]]; then
      echo "$ver_new" > VERSION
    else
      echo "ERROR: invalid version: $ver_new" 1>&2
      exit 1
    fi
    ;;
esac

if [[ -f Gemfile ]]; then
  bundle check 2>&1 >/dev/null || { bundle install --local --path vendor/bundle || bundle check; }
  git add Gemfile.lock
fi

git add VERSION

git commit -m "bump: $ver_new"
git tag "v$ver_new"

cat VERSION
